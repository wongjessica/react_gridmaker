{"version":3,"sources":["components/Table/TableCell.js","components/Table/TableRow.jsx","components/Table/index.js","components/Table/Table.jsx","App.js","index.js"],"names":["TableCell","ri","ci","color","handleApplyColor","style","backgroundColor","onClick","TableRow","row","map","Table","grid","id","App","useState","setColor","setGrid","onChange","e","target","value","prevGrid","length","newGrid","newRow","push","pop","cellColor","r","c","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fd304de.chunk.js","sourcesContent":["function TableCell({ ri, ci, color, handleApplyColor }) {\n  const setColor = () => handleApplyColor(ri, ci);\n\n  return (\n    <td\n      style={{\n        backgroundColor: color\n      }}\n      onClick={setColor}\n    ></td>\n  );\n}\n\nexport default TableCell;\n","import TableCell from \"./TableCell\";\n\nfunction TableRow({ row, ri, handleApplyColor }) {\n  return (\n    <tr>\n      {row.map((color, ci) => (\n        <TableCell\n          key={ci}\n          ri={ri}\n          ci={ci}\n          color={color}\n          handleApplyColor={handleApplyColor}\n        />\n      ))}\n    </tr>\n  );\n}\n\nexport default TableRow;\n","/* eslint-disable import/prefer-default-export */\nimport Table from \"./Table\";\n\nexport default Table;\n","import React from \"react\";\nimport TableRow from \"./TableRow\";\n\nconst Table = ({ grid, handleApplyColor }) => {\n  return (\n    <table id=\"grid\">\n      <tbody>\n        {grid.map((row, ri) => (\n          <TableRow\n            key={ri}\n            row={row}\n            ri={ri}\n            handleApplyColor={handleApplyColor}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Table from \"./components/Table\";\n\nconst App = () => {\n  const [color, setColor] = useState(\"red\");\n  const [grid, setGrid] = useState([[\"white\"]]);\n\n  const addRow = () => {\n    setGrid(prevGrid => {\n      if (prevGrid.length === 0) return [[\"white\"]];\n      const newGrid = prevGrid.map(row => [...row]);\n      const newRow = prevGrid[0].map(row => \"white\");\n      newGrid.push(newRow);\n      return newGrid;\n    });\n  };\n  const addCol = () => {\n    setGrid(prevGrid => {\n      if (prevGrid.length === 0) return [[\"white\"]];\n      const newGrid = prevGrid.map(row => [...row, \"white\"]);\n      return newGrid;\n    });\n  };\n\n  const removeRow = () => {\n    setGrid(prevGrid => {\n      if (prevGrid.length <= 1) return [];\n      const newGrid = prevGrid.map(row => [...row]);\n      newGrid.pop();\n      return newGrid;\n    });\n  };\n  const removeCol = () => {\n    setGrid(prevGrid => {\n      if (prevGrid.length <= 1 || prevGrid[0].length <= 1) return [];\n      const newGrid = prevGrid.map(row => {\n        const newRow = [...row];\n        newRow.pop();\n        return newRow;\n      });\n      return newGrid;\n    });\n  };\n\n  const colorSelect = e => setColor(e.target.value);\n  const handleApplyColor = (r, c) => {\n    setGrid(prevGrid =>\n      prevGrid.map((row, ri) =>\n        row.map((cellColor, ci) => {\n          if (r === ri && c === ci) {\n            return color;\n          }\n          return cellColor;\n        })\n      )\n    );\n  };\n\n  const uncoloredFill = () => {\n    setGrid(prevGrid =>\n      prevGrid.map((row, ri) =>\n        row.map((cellColor, ci) => {\n          if (cellColor === \"white\") {\n            return color;\n          }\n          return cellColor;\n        })\n      )\n    );\n  };\n  const fill = () => {\n      setGrid(prevGrid =>\n      prevGrid.map((row, ri) =>\n        row.map((cellColor, ci) => (color))\n      )\n    );\n  };\n  const clearAll = () => {\n    setGrid(prevGrid =>\n      prevGrid.map((row, ri) =>\n        row.map((cellColor, ci) => {\n          if (cellColor !== \"white\") {\n            return \"white\";\n          }\n          return cellColor;\n        })\n      )\n    );\n  };\n\n  return (\n    <>\n      <h1>Grid Maker Reactified</h1>\n      <form>\n        <select id=\"color_choose\" onChange={colorSelect}>\n          <option value=\"red\">Red</option>\n          <option value=\"orange\">Orange</option>\n          <option value=\"yellow\">Yellow</option>\n          <option value=\"green\">Green</option>\n          <option value=\"blue\">Blue</option>\n          <option value=\"purple\">Purple</option>\n          <option value=\"white\">White</option>\n          <option value=\"#cdcdcd\">Gray</option>\n          <option value=\"#F781F3\">Pink</option>\n          <option value=\"#2EFEF7\">Toothpaste</option>\n          <option value=\"#00FF00\">Lime</option>\n          <option value=\"#2E9AFE\">Light Blue</option>\n        </select>\n      </form>\n      <button onClick={addRow}>ADD ROW</button>\n      <button onClick={addCol}>ADD COL</button>\n      <button onClick={removeRow}>REMOVE ROW</button>\n      <button onClick={removeCol}>REMOVE COL</button>\n      <button onClick={uncoloredFill}>FILL UNCOLORED</button>\n      <button onClick={fill}>FILL ALL</button>\n      <button onClick={clearAll}>CLEAR ALL</button>\n      <br />\n      <Table grid={grid} handleApplyColor={handleApplyColor}></Table>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}